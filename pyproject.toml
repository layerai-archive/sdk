[tool.poetry]
name = "layer-sdk-dev"
version = "0.10.0"
description = "Layer AI SDK"
authors = ["Layer <info@layer.ai>"]
readme = "README.md"
license = "Apache-2.0"

packages = [
    { include = "layer" },
]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
Jinja2  = ">=2.11.3"
aiohttp  = ">=3.7.3,<3.8.0"
boto3  = ">=1.16.24"
cloudpickle  = ">=2.0.0"
cryptography  = ">=3.4.7"
grpcio-tools = "1.45.0"
grpcio = "1.45.0"
humanize  = ">=3.11.0"
idna = "<3"
jsonschema = "3.1.1"
mlflow  = ">=1.25.0"
networkx  = ">=2.5"
packaging = "<=21.0"  # latest release (21.2) is causing version conflicts with pyparsing
pandas = [
    {version = "1.3.5", python = "<3.8"},
    {version = "^1.4.2", python = ">=3.8"}
]
Pillow = ">=9.1.0"
pickle5 = { version = "~0.0.11", python = "<3.8" }
polling  = ">=0.3.1"
prompt_toolkit  = ">=3.0.8"
protobuf  = ">=3.12.0"
pyarrow = "7.0.0"
pyjwt  = ">=1.7.1,<2.0.0"
rich = "~10.12.0"
transformers = "*"
typing-extensions = "<4.0.0"  # rich library cannot use 4.0.0 and pip tries to install it
validate-email = "1.3"
yarl  = ">=1.6.3"
wrapt  = ">=1.13.3"
layer-api = "0.9.358961"

[tool.poetry.dev-dependencies]
black = "22.3.0"
mypy = "0.942"
isort = "^5.10.1"
bandit = "^1.7.4"
pytest-cov = "^3.0.0"
flake8 = "^4.0.1"
ipdb = "^0.13.9"
pytest = "^7.1.2"
pytest-dotenv = "^0.5.2"
flake8-no-implicit-concat = "^0.3.3"
data-science-types = "0.2.23"
tensorflow = { version = "^2.8.0", markers = "platform_machine != 'arm64'" }
tensorflow-macos = { version = "^2.8.0", markers = "platform_machine == 'arm64'" }
catboost = "1.0.5"
keras = "2.8.0"
lightgbm = "3.3.2"
xgboost = "1.5.1"
scikit-learn = "1.0.2"
torch = "1.11.0"
grpc-stubs = "1.24.5"
grpcio = "1.45.0"
grpcio-tools = "1.45.0"
types-protobuf = "3.19.4"
types-setuptools = "57.4.0"
types-jwt = "0.1.3"
ddtrace = "0.60.0"
pytest-asyncio = "0.18.3"
pytest-timeout = "2.1.0"
matplotlib = "3.5.1"
yolov5 = "^6.1.2"
types-toml = "^0.10.7"
types-Pillow = "^9.0.15"
pytest-xdist = "^2.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = [
    "test/*",
]
